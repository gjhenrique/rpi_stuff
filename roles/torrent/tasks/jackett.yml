# https://github.com/dotnet/runtime/issues/7764
# Alternative would be to use mono for these cases, but it's very bloated
- name: Skip jackett for armv6
  set_fact:
    skip_jackett: true
  when: "'armv6l' in ansible_machine"

- name: Don't skip jackett for armv6
  set_fact:
    skip_jackett: false
  when: "'armv6l' not in ansible_machine"

- name: set arm variable
  set_fact:
    jacket_arch: "ARM32"
  when: "'arm' in ansible_architecture"

- name: set x86 variable
  set_fact:
    jacket_arch: "AMDx64"
  when: "'x86_64' in ansible_architecture"

- name: Register current installed jacket version
  command: "/usr/lib/jackett/jackett --version"
  register: jackett_version
  changed_when: false
  ignore_errors: yes
  when: not skip_jackett

- name: Download jackett bin
  get_url:
    url: "https://github.com/Jackett/Jackett/releases/download/{{ torrent_jacket_version }}/Jackett.Binaries.Linux{{ jacket_arch }}.tar.gz"
    dest: /tmp/jacket-{{ torrent_jackett_version }}.tar.gz
  when: not skip_jackett and (not jackett_version.stdout | regex_search(torrent_jackett_version))

- name: Remove previously Jackett extracted folder
  file:
    path: /tmp/Jackett
    state: absent

- name: Extract jackett bin
  shell: |
    tar -xzvf jacket-{{ torrent_jackett_version }}.tar.gz
    mkdir -p /usr/lib/jackett/
    cp -dpr Jackett/* /usr/lib/jackett/
  args:
    chdir: "/tmp"
  when: not skip_jackett and (not jackett_version.stdout | regex_search(torrent_jackett_version))

- name: Deploy jackett service file
  copy:
    src: jackett.service
    dest: /lib/systemd/system/jackett.service
    mode: '0644'
  notify:
    - reload jackett
  when: not skip_jackett

- name: Create jackett auth
  htpasswd:
    path: '/etc/nginx/.jackett.htpasswd'
    name: "{{ torrent_jackett_user }}"
    password: "{{ torrent_jackett_password }}"
    crypt_scheme: 'sha512_crypt'
    mode: '0644'
  notify: test nginx and restart
  when: not skip_jackett

- name: Copy nginx config file
  template:
    src: jackett.conf.j2
    dest: /etc/nginx/sites-available/jackett.conf
    mode: '0644'
  notify: test nginx and restart
  when: not skip_jackett

- name: Symlink available nginx conf
  file:
    src: '/etc/nginx/sites-available/jackett.conf'
    dest: '/etc/nginx/sites-enabled/jackett.conf'
    state: 'link'
  notify: test nginx and restart
  when: not skip_jackett

- name: Enable jackett service
  systemd:
    name: jackett
    enabled: yes
    state: started
  when: not skip_jackett
