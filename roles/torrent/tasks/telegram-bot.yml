---
- name: Register current installed telegram-bot version
  ansible.builtin.command: "/usr/bin/telegram-bot --version"
  register: installed_bot_version
  changed_when: false
  ignore_errors: true

- name: Install bot variable
  ansible.builtin.set_fact:
    install_bot: true
  when: "(installed_bot_version.stdout is not defined or
            (not installed_bot_version.stdout | regex_search(torrent_bot_version))
          )"

- name: Register architecture - (x86_64)
  ansible.builtin.set_fact:
    bot_architecture: "x86"
  when: "'x86_64' in ansible_architecture"

- name: Register architecture - (aarch64)
  ansible.builtin.set_fact:
    bot_architecture: "aarch64"
  when: "'aarch64' in ansible_architecture"

- name: Register architecture - (armv7)
  ansible.builtin.set_fact:
    bot_architecture: "armv7"
  when: "'armv7l' in ansible_architecture"

- name: Register architecture - (armv6)
  ansible.builtin.set_fact:
    bot_architecture: "armv6"
  when: "'armv6l' in ansible_architecture"

- name: Fail bot installation when architecture is not supported
  ansible.builtin.fail:
    msg: "Architecture {{ ansible_architecture }} not supported for bot installation"
  when: "bot_architecture is not defined"

- name: Download bot binary
  ansible.builtin.get_url:
    url: "https://github.com/gjhenrique/telegram-bot-torrents/releases/download/{{ torrent_bot_version }}/telegram-bot-torrents.linux.{{ bot_architecture }}"
    dest: /usr/bin/telegram-bot
    force: true
    mode: '0755'
  when: "install_bot"
  notify: 'Restart telegram-bot'

- name: Copy telegram-bot service file
  ansible.builtin.template:
    src: telegram-bot.service.j2
    dest: /lib/systemd/system/telegram-bot.service
    mode: '0644'
  notify: 'Restart telegram-bot'
  no_log: true

- name: Ensure telegram-bot is started/enabled
  ansible.builtin.systemd:
    name: telegram-bot
    enabled: true
    state: started
