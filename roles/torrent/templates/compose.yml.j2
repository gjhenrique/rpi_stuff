---
x-config: &network_config
  network_mode: "service:tailscale"

services:
  # https://docs.linuxserver.io/images/docker-transmission
  transmission:
    image: docker.io/linuxserver/transmission:4.0.6
    <<: *network_config
    restart: on-failure
    environment:
      PUID: "{{ user_id }}"
      PGID: "{{ torrent_user_gid_owner }}"
      USER: "{{ torrent_transmission_user }}"
      PASS: "{{ torrent_transmission_password }}"
    volumes:
      - /home/torrent/transmission/config:/config
      - /home/torrent/media/torrents:/downloads

  # # https://docs.linuxserver.io/images/docker-jackett
  jackett:
    image: docker.io/linuxserver/jackett:0.22.127
    <<: *network_config
    restart: on-failure
    environment:
      PUID: "{{ user_id }}"
      PGID: "{{ torrent_user_gid_owner }}"
    volumes:
      - /home/torrent/jackett:/config

  # # https://hub.docker.com/r/wiserain/flexget
  flexget:
    image: docker.io/wiserain/flexget:3.11.36
    <<: *network_config
    restart: on-failure
    entrypoint: bash -c "apk add ffmpeg && /init"
    environment:
      PUID: "{{ user_id }}"
      PGID: "{{ torrent_user_gid_owner }}"
      TZ: "Europe/Berlin"
    volumes:
      # Same volume for torrents and final media
      # If you put as two different volumes, then Linux treats as two different FSes and moves the entire file
      - /home/torrent/media:/media
      - /home/torrent/flexget/config:/config
    # Throttle ffmpeg extracting subtitles
    cpu_count: 1


  telegram-bot:
    image: docker.io/gjhenrique/telegram-bot-torrents:v0.5.2
    <<: *network_config
    restart: on-failure
    environment:
      TRANSMISSION_TV_PATH: "/downloads/TV"
      TRANSMISSION_MOVIE_PATH: "/downloads/Movies"
      TRANSMISSION_URL: http://localhost:9091
      TRANSMISSION_CREDENTIALS: "{{ torrent_transmission_user }}:{{ torrent_transmission_password }}"
      JACKETT_DATA_DIR: /jackett/Jackett
      TELEGRAM_BOT_TOKEN: "{{ torrent_telegram_token }}"
    volumes:
      - /home/torrent/jackett:/jackett
