---
- name: Install https transport for apt
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gnupg
      - lsb-release
    force: true

- name: Import jellyfin repository key
  ansible.builtin.apt_key:
    url: "https://repo.jellyfin.org/debian/jellyfin_team.gpg.key"
    state: present

- name: Set x86 variable
  ansible.builtin.set_fact:
    jellyfin_arch: "amd64"
  when: "'x86_64' in ansible_architecture"

- name: Set armv7 variable
  ansible.builtin.set_fact:
    jellyfin_arch: "armhf"
  when: "'armv7l' in ansible_architecture"

- name: Set arm 64-bit variable
  ansible.builtin.set_fact:
    jellyfin_arch: "arm64"
  when: "'aarch64' in ansible_architecture"

- name: Fail jellyfin installation when architecture is not supported
  ansible.builtin.fail:
    msg: "Architecture {{ ansible_architecture }} is not supported by jellyfin repository"
  when: "jellyfin_arch is not defined"

- name: Add jellyfin repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ jellyfin_arch }}] https://repo.jellyfin.org/debian {{ ansible_distribution_release }} main"
    state: present

- name: Install jellyfin repository
  ansible.builtin.apt:
    update_cache: true
    name: jellyfin
    state: latest  # noqa package-latest
  notify: "Restart jellyfin"

- name: Change ownership of specified directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ jellyfin_user }}"
    recurse: true
  loop:
    - "/var/lib/jellyfin"
    - "/etc/jellyfin"

- name: Create default jellyfin override directory
  ansible.builtin.file:
    path: '/etc/systemd/system/jellyfin.service.d'
    state: 'directory'
    mode: '0755'

- name: Copy override file
  ansible.builtin.template:
    src: jellyfin-override.conf.j2
    dest: "/etc/systemd/system/jellyfin.service.d/jellyfin-override.conf"
    mode: "0755"
  notify: "Restart jellyfin"

- name: Enable jellyfin service
  ansible.builtin.systemd:
    name: jellyfin
    enabled: true
    state: started
