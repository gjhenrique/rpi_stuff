---
- name: Register architecture - (x86_64)
  set_fact:
    emby_architecture: "amd64"
  when: "'x86_64' in ansible_architecture"

- name: Register architecture - (aarch64)
  set_fact:
    emby_architecture: "arm64"
  when: "'aarch64' in ansible_architecture"

- name: Register architecture - (armv7)
  set_fact:
    emby_architecture: "armhf"
  when: "'armv7l' in ansible_architecture"

- name: Fail when architecture is not supported
  fail:
    msg: "Architecture {{ ansible_architecture }} not supported"
  when: "emby_architecture is not defined"

- name: Register emby_version
  shell: "dpkg -s emby-server | grep '^Version:' | awk '{print $2}'"
  register: installed_emby_version
  changed_when: false
  ignore_errors: true

- name: Check if emby needs to be installed
  set_fact:
    install_emby: true
  when: jackett_version.rc != 1 or (installed_emby_version.stdout != emby_version)

- name: Fail when architecture is not supported
  fail:
    msg: "Emby architecture {{ emby_archicture not supported }}"
  when: emby_architecture is not defined

- name: Install emby version
  apt:
    deb: "https://github.com/MediaBrowser/Emby.Releases/releases/download/{{ emby_version | replace('-beta', '') }}/emby-server-deb_{{ emby_version | replace('-beta', '') }}_{{ emby_architecture }}.deb"
    force: true
  when: install_emby is defined and install_emby is true
  notify: 'restart emby-server'

- name: Stop emby-server with emby user
  systemd:
    name: emby-server
    state: stopped

- name: Change permission of emby folder
  file:
    path: /var/lib/emby
    owner: "{{ emby_user }}"
    recurse: true
    state: directory

- name: Enable and start emby-server with specify user
  systemd:
    name: "emby-server@{{ emby_user }}"
    enabled: true
    state: started
