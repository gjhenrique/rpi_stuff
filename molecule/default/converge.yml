---
- name: Converge
  hosts: all
  become: true
  pre_tasks:
    - name: Create server wireguard keys directory
      ansible.builtin.file:
        path: '/home/torrent/wireguard/server'
        state: directory
        mode: '0755'
      tags: torrent

    - name: Create peer wireguard keys directory
      ansible.builtin.file:
        path: '/home/torrent/wireguard/peer1'
        state: directory
        mode: '0755'
      tags: torrent

    - name: Save private key server
      ansible.builtin.copy:
        content: "{{ torrent_custom_vpn_server_private_key }}"
        dest: /home/torrent/wireguard/server/privatekey-server
        mode: '0644'
      tags: torrent

    - name: Save public key server
      ansible.builtin.copy:
        content: "{{ torrent_custom_vpn_server_public_key }}"
        dest: /home/torrent/wireguard/server/publickey-server
        mode: '0644'
      tags: torrent

    - name: Save private key peer
      ansible.builtin.copy:
        content: "{{ torrent_custom_vpn_client_private_key }}"
        dest: /home/torrent/wireguard/peer1/privatekey-peer1
        mode: '0644'
      tags: torrent

    - name: Save public key peer
      ansible.builtin.copy:
        content: "{{ torrent_custom_vpn_client_public_key }}"
        dest: /home/torrent/wireguard/peer1/publickey-peer1
        mode: '0644'
      tags: torrent

    - name: Save preshared key
      ansible.builtin.copy:
        content: "{{ torrent_custom_vpn_preshared_key }}"
        dest: /home/torrent/wireguard/peer1/presharedkey-peer1
        mode: '0644'
      tags: torrent

  roles:
    - role: boilerplate
      tags: boilerplate
    - role: caddy
      tags: caddy
    - role: syncthing
      tags: syncthing
    - role: torrent
      tags: torrent
    - role: jellyfin
      tags: jellyfin
    - role: emby
      tags: emby
    - role: share
      tags: share
    - role: mount
      tags: mount

  vars:
    syncthing_http_user: "SyncthingUser"
    syncthing_http_password: "SyncthingPassword"

    # Allow to override a real token via environment
    torrent_telegram_token: "{{ lookup('env', 'TELEGRAM_TOKEN') | default('TelegramToken') }}"
    torrent_telegram_groups: "123456"
    torrent_telegram_omdb_token: "OmdbToken"

    torrent_transmission_user: "TransmissionUser"
    torrent_transmission_password: "TransmissionPassword"

    torrent_cage_non_enforcing: false

    torrent_flexget_rss: "https://rss.com"
    torrent_flexget_telegram_receiver: "Torrents"

    jellyfin_user: "jellyfintest"

    caddy_domain: example.com
    caddy_cert_email: "email@email.com"
    caddy_cert_cloudflare_token: "token"

    torrent_vpn_type: "custom"
    torrent_custom_vpn_ip_addresses: "10.99.99.2/32"

    torrent_vpn_server: true
    torrent_vpn_server_endpoint: "10.44.44.100"
    torrent_vpn_server_subnet: "10.99.99.0"
    torrent_vpn_server_client_ip: "10.44.44.100"
    torrent_vpn_client_ip: "10.99.99.50"

    # Hardcoded and plain-text keys
    # No worries. This is just for tests
    # It's here because prepare needs those variables
    torrent_custom_vpn_server_private_key: AL3YAfgHsMuQQjiqp6iGs1EB55tuCaxOFq38wq6QmEQ=
    torrent_custom_vpn_server_public_key: CLW16gvNmmbZ8KZmtEhBgqvBnGOzya8GQAxIWU/RuAA=

    torrent_custom_vpn_client_private_key: oM3x5tjDJQotbAOPECW5ck5+gz3/yZNHNi+eKmiPqWY=
    torrent_custom_vpn_client_public_key: RTbiiT8rNnMmu+Y56xyyfB5eIC4gFow1g4/R/MRJiQE=

    torrent_custom_vpn_preshared_key: 4KluUTo6CNcEeytQ53LlrHs0vZwr4Z4iWISmXdSWzbA=

    share_users:
      user1:
        password: pass1
        uid: 1100

    share_samba_volumes:
      pictures: "[Pictures]; path=/shares/user1; valid users= user1; guest ok = no; read only = no; browseable = yes;"

    share_container_volumes:
      - host_path: /home/share/shares/user1
        container_path: /shares/user1
        uid: 1100

    mount_paths:
      - mount_path: /mnt/dir1
        mount_from: /tmp/dir1
        type: None
        options: bind
      - mount_path: /mnt/dir2
        mount_from: /mnt/dir1/dir2
        depends: /mnt/dir1
        type: None
        options: bind
        user: mount
